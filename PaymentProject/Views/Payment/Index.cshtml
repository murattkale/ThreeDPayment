@{ ViewData["Title"] = "Ödeme"; }
@model PaymentViewModel

<div class="card">
    <div class="card-body">
        <form id="payment-form" method="post" role="form" action="#">
            <input type="hidden" asp-for="BankId" />
            <div class="row">
                <div class="col col-lg-4">
                    <div class="row">
                        <div class="col">
                            <div class="card-wrapper"></div>
                        </div>
                    </div>
                    <div class="row mt-3">
                        <div class="col">
                            <div class="credit-card-form card-js">
                                <input class="form-control name" asp-for="CardHolderName" />
                                <input class="form-control card-number" asp-for="CardNumber" />
                                <input class="form-control expiry-month" asp-for="ExpireMonth" />
                                <input class="form-control expiry-year" asp-for="ExpireYear" />
                                <input class="form-control cvc" asp-for="CvvCode" />
                            </div>
                        </div>
                    </div>
                    <div class="row mt-3">
                        <div class="col">
                            <div class="form-group">
                                <label class="col-form-label">Tutar</label>
                                <input type="text" class="form-control" asp-for="TotalAmount" value="1" />
                            </div>
                        </div>
                    </div>
                    <div class="d-flex justify-content-end mt-3">
                        <div>
                            <button type="submit" class="btn btn-primary">Öde</button>
                        </div>
                    </div>
                </div>
                <div class="col col-lg-6">
                    <div class="row">
                        <div class="col-12">
                            <table class="table table-bordered install-table" id="installment-options">
                                <thead>
                                    <tr>
                                        <th></th>
                                        <th>Taksit Sayısı</th>
                                        <th>Aylık Tutar</th>
                                        <th>Toplam</th>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                            <div class="text-danger install-warning">
                                Taksit seçenekleri kart bilgisi girildikten sonra görüntülenir.
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col">
                            <div class="bank-logo"></div>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- payment modal -->
<div class="modal fade" id="payment-modal" data-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="staticBackdrop" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-body">
                <iframe style="width:100%;height:500px;border:none" frameborder="0"></iframe>
            </div>
        </div>
    </div>
</div>

@section styles {
    <link href="/css/card-js.css" rel="stylesheet" />
}

@section scripts {
    <script src="/js/card-js.js"></script>
    <script src="/js/jquery.card.js"></script>
    <script>
        var card = new Card({
            form: document.getElementById('payment-form'),
            container: '.card-wrapper',
            formatting: true,
            formSelectors: {
                numberInput: 'input.card-number',
                expiryInput: 'input.expiry',
                cvcInput: 'input.cvc',
                nameInput: 'input.name'
            },
            messages: {
                validDate: 'expire\ndate',
                monthYear: 'mm/yy'
            }
        });

        //get installment by bin number
        $(document).on("keyup", "#@Html.IdFor(model=> model.CardNumber)", function (e) {
            //credit card prefix
            var prefix = $(this).val().replaceAll("-", "").replaceAll(" ", "");

            //when entered card number length is 6 digits
            if (prefix.length == 6 || prefix.length == 16) {
                //get total amount
                var totalAmount = parseFloat($("#@Html.IdFor(model=> model.TotalAmount)").val().replace(",", "."));

                //get installments
                fetch("@Url.Action("GetInstallments", "Payment")", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({ prefix: prefix.substr(0,6), totalAmount: totalAmount })
                })
                    .then(function (response) { return response.json() })
                    .then(function (response) {
                        $(".bank-logo").empty();
                        if (response.errorMessage) {
                            //show bank not found error
                            e.preventDefault();
                            alert(response.errorMessage);
                        } else {
                            //set manufacturer card flag
                            $("#@Html.IdFor(model => model.ManufacturerCard)").val(response.manufacturerCard);
                            $("#@Html.IdFor(model => model.BankId)").val(response.bankId);
                            $(".bank-logo").empty().append(`<img src="${response.bankLogo}" alt="${response.bankName}" title="${response.bankName}" />`);
                            $(".install-warning").hide();

                            $("#installment-options tbody").empty();
                            for (var i = 0; i < response.installmentRates.length; i++) {
                                var installmentRate = response.installmentRates[i];

                                var row = `<tr data-amount=${installmentRate.totalAmountValue} ${installmentRate.installment == 1 ? 'style="background-color: rgb(238, 238, 238)"' : ''}>
                                            <td class="text-center"><input type="radio" name="Installment" value="${installmentRate.installment}" ${installmentRate.installment == 1 ? 'checked' : ''}/></td>
                                            <td>${installmentRate.text}</td>
                                            <td>${installmentRate.amount} TL</td>
                                            <td>${installmentRate.totalAmount} TL</td>
                                        </tr>`;

                                $("#installment-options tbody").append(row);
                            }
                        }
                    });
            } else if (prefix.length < 6) {
                $(".bank-logo").empty();
                $("#installment-options tbody tr:gt(0)").remove();
                $("#installment-options tbody tr:first input:radio").prop("checked", true);
                $("#installment-options tbody tr:first").css("background-color", "#eee");
            }
        });
    </script>

    <script>
        /* installment */
        $(document).on("click", "#installment-options tbody tr", function () {
            $(this).parents("table").find("tbody tr").removeAttr("style");

            $(this).find("input:radio").prop("checked", true);
            $(this).css("background-color", "#eee");
            debugger;
            var totalAmount = parseFloat($(this).attr("data-amount").replace(",", "."));
            $("#@Html.IdFor(model=> model.TotalAmount)").val(totalAmount);

        });

        /* submit payment form */
        $(document).on("submit", "form", function (e) {
            e.preventDefault();

            debugger;
            var postData = new URLSearchParams(new FormData(document.getElementById("payment-form")));

            //submit payment form params
            fetch("@Url.Action("Index", "Payment")", {
                body: postData,
                headers: {
                    "Content-Type": "application/x-www-form-urlencoded"
                },
                method: "POST"
            })
                .then(function (response) { return response.json() })
                .then(function (response) {
                    if (response && response.gatewayUrl) {
                        $("#payment-modal iframe").attr("src", response.gatewayUrl);
                        $("#payment-modal").modal("show");
                    } else {
                        alert(response.errorMessage);
                    }
                })
                .catch(function (error) {
                    alert("Ödeme sırasında bir hata oluştu.");
                });
        });

        $(window).on("message", function (e) {
            var data = e.originalEvent.data;
            if (data) {
                if (data.success && data.orderNumber) {
                    window.location = `@Url.Action("Completed", "Payment")/${data.orderNumber}`;
                } else {
                    alert(data.errorMessage);
                }
            } else {
                alert("Ödeme sırasında bir hata oluştu.");
            }

            $("#payment-modal iframe").attr("src", "");
            $("#payment-modal").modal("hide");
        });
    </script>
}
@*4508034508034509*@
